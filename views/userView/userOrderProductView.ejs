
<%-include('../userView/include/user_header')-%>



  <section class="h-100 gradient-custom">
    <div class="container py-5 h-100">
      <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-lg-10 col-xl-8">
          <div class="card" style="border-radius: 10px;">
            <div class="card-header px-4 py-5">
              <h5 class="text-muted mb-0">Thanks for your Order, <span style="color: rgb(0, 0, 0);">
                  <%= user%>
                </span>!</h5>
            </div>
            <div class="card-body">
              <div class="d-flex justify-content-between align-items-center mb-4">
                <p class="lead fw-normal mb-0" style="color: #923d7b;">Receipt</p>
                <!-- <p class="small text-muted mb-0">Receipt Voucher : 1KAU9-84UIL</p> -->
              </div>
              <div>
                <hr>
                <h5>Order Address :</h5>
                <p>Name : <%=orders.Address.Name%>
                </p>
                <p>Address : <%=orders.Address.Address%> , <%=orders.Address.City%> , <%=orders.Address.State%> ,
                        <%=orders.Address.Pincode%>
                </p>
              </div>
              <br>
              <div class="card shadow-0 border mb-4">
                <div class="card-body">
                  <% if (orders){%>
                    <% orders.Items.forEach((data)=> { %>
                      <div class="row">
                        <div class="col-md-2">
                          <img src="/product-img/<%= data.productId.images[0]%>" class="img-fluid" alt="Phone">
                        </div>
                        <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                          <p class="text-muted mb-0">
                            <%=data.productId.ProductName%>
                          </p>
                        </div>
                        <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                          <p class="text-muted mb-0 small">
                            <%=data.productId.Specification1%>
                          </p>
                        </div>
                        <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                          <p class="text-muted mb-0 small">Category: <%=data.productId.Category%>
                          </p>
                        </div>
                        <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                          <p class="text-muted mb-0 small">Qty: <%=data.quantity%>
                          </p>
                        </div>
                        <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                          <p class="text-muted mb-0 small">$<%=data.productId.DiscountAmount%>
                          </p>
                          <s class="text-danger" style="font-size: 10px;">â‚¹<%=data.productId.Price%></s>
                        </div>
                      </div>
                      <br>
                      
                      <%if(orders.Status=='Return Pending' ){%>
                        <p class="text-danger">Product returned</p>
                        <%}else if(orders.Status=='Delivered' ){%>
                          <p class="text-success">Product Delivered

                            
                            <a href="/editReviewAndRating?productId=<%= data.productId._id %>&orderId=<%= orders._id%>"><button class="btn btn-outline-primary" style="margin-left: 430px;">Rate & Review Product</button></a>
                          </p>
                          <!-- return -->
                          <!-- <button class="btn small btn-success"  style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .5rem; --bs-btn-font-size: .75rem;"
                         id="returnOrderBtn" data-item-id="<%= data._id %> " data-order-id="<%=orders._id%>">Return</button> -->
                            

                         <!-- review and rating -->
                         <!-- <button type="button" class="btn text-primary" data-toggle="modal" data-target="#exampleModal<%= data.productId._id %>" data-whatever="@mdo">Rate & Review Product</button> -->
                         
                          <%}else if(orders.Status=="Cancelled" ){%>
                            <p class="text-danger">Order Cancelled</p>
                            <%}else if(orders.Status=="Rejected" ){%>
                              <p class="text-danger">Order Rejected</p>
                              <%}else if(data.productStatus=='Pending' ){%>
                                <button class="btn btn-outline-danger" type="button"
                                  onclick="cancelProduct('<%= data._id %>','<%=orders._id%>')">Cancel</button>
                                <%}else{%>
                                  <p class="text-danger">Cancelled</p>
                                  <%}%>
                                    <hr>
                                    
                                    <% }); %>
                                      <% }else{%>
                                        <h3>No data available</h3>
                                        <% } %>
                </div>
              </div>
              <div class="card-footer border-0 px-4 py-5"
                style="background-color: #72a887; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
                <h5 class="d-flex align-items-center justify-content-end text-white text-uppercase mb-0">Total
                  Price: <span class="h2 mb-0 ms-2">$ <%= TotalPrice %></span></h5>
              </div>
            </div>
          </div>
        </div>
      </div>
  </section>

  <!-- modal -->
  <!-- <div class="modal fade" id="returnOrderModal" tabindex="-1" role="dialog" aria-labelledby="returnOrderModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="returnOrderModalLabel">Return Order</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="returnReason">Review:</label>
          <input type="text" class="form-control" id="returnReason" placeholder="Enter reason" required>
        </div>
        <div class="form-group">
          <label for="returnDescription">Description:</label>
          <textarea class="form-control" id="returnDescription" placeholder="Enter description" required></textarea>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="confirmReturnBtn">Confirm Return</button>
      </div>
    </div>
  </div>
</div> -->

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

  <!-- <script>
    document.addEventListener('DOMContentLoaded', function () {
      // const returnOrderButtons = document.querySelectorAll('#returnOrderBtn');
      const returnOrderButtons = document.querySelectorAll('#returnOrderBtn');
    
    console.log("..................",returnOrderButtons);
      returnOrderButtons.forEach((button) => {
        button.addEventListener('click', () => {
          const orderId = button.getAttribute('data-order-id');
          const itemId = button.getAttribute('data-item-id');
          console.log(",,,,,,,,,,,,,,,,,,",orderId);
          console.log('...............',itemId);
          // Show the modal
          $('#returnOrderModal').modal('show');
        
          console.log("..................midal opened.");
          // Handle the confirmation inside the modal
           document.getElementById('confirmReturnBtn').addEventListener('click', () => {
            const returnReason = document.getElementById('returnReason').value;
            // const returnDescription = document.getElementById('returnDescription').value;
    
            fetch('/return-order', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ orderId, itemId, returnReason }),
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  alert(`Order has been returned successfully.`);
                  $('#returnOrderModal').modal('hide');
                  window.location.reload()
                } else {
                  alert(`Error: ${data.message}`);
                }
              })
              .catch((error) => {
                console.error('Error returning the order:', error);
                alert('An error occurred while returning the order.');
              })
              
          });
        });
      });
    });
    </script> -->

  <script>
    function cancelProduct(productId, orderId) {
      console.log("productId:", productId);
      console.log("orderId:", orderId);

      if (confirm('Do you want to Cancel this Product?')) {
        fetch('/cancel-product', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId: productId, orderId: orderId }),
        })
          .then(response => {
            if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
          })
          .then(data => {
    // Handle the success response
    console.log(data);

    Swal.fire({
        title: 'Canceled!',
        text: 'Product has been canceled successfully.',
        icon: 'success',
        timer: 10000, 
        showConfirmButton: false,
    });

   
    location.reload();
})
.catch(error => {
  
    console.error('Error:', error);

    Swal.fire({
        title: 'Error!',
        text: 'An error occurred while canceling the product.',
        icon: 'error',
        timer: 10000,
        showConfirmButton: false, 
    });
});

      }
    }

    //rating and review
    function submitReview(productID) {
    console.log("submitReview function reached");
    const rating = document.getElementById('rating').value;
    console.log("Rating:", rating);

    const review = document.getElementById(`review${productID}`).value;
    console.log("Review:", review);
    const producId = productID;
    console.log("producId..", producId);

    if (!rating || !review) {
        alert('Please provide both rating and review.');
        return;
    }

    const data = {
        rating: rating,
        review: review,
        producId: producId
    };
    console.log("data.....", data);

    fetch('/userReviewAndRating', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    })
        .then(response => response.json())
        .then(responseData => {
            console.log(responseData);

            if (responseData.success) {
                Swal.fire({
                    title: 'Success!',
                    text: responseData.message,
                    icon: 'success',
                    timer: 2000, 
                    showConfirmButton: false,
                });
                $('#exampleModal').modal('hide');

                setTimeout(() => {
            location.reload();
        }, 2000);
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while adding the review.',
                    icon: 'error',
                    timer: 3000,
                    showConfirmButton: false,
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);

            Swal.fire({
                title: 'Error!',
                text: 'An error occurred while adding the review.',
                icon: 'error',
                timer: 3000,
                showConfirmButton: false,
            });
        });
}

  </script>
        <%-include('../userView/include/user_footer')-%>