<%-include('../adminView/include/ad_header')-%>
<%-include('../adminView/include/_sidebar')-%>
<div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Edit Coupons</h1>
      </div>
      <div class="modal-body">
        <form id="couponForm">
          <div class="mb-3">
            <label for="recipient-name" class="col-form-label">Coupon Name:</label>
            <input type="text" class="form-control" id="couponName" name="name" 
            value="<%=couponData.CoupenName%>" required>
          </div>
          <div class="mb-3">
            <label for="couponCode" class="col-form-label">Coupon Code:</label>
            <input type="text" class="form-control" id="couponCode" name="couponCode"
              pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[#])[A-Za-z\d#]+$"
              title="Must contain at least one uppercase letter, one lowercase letter, one number, and #"
              value="<%=couponData.CoupenCode%>" required>
            <small id="couponWarning" class="form-text text-danger d-none">Invalid coupon code. Must contain at least one
              uppercase letter, one lowercase letter, one number, and #</small>
          </div>
       
          <div class="mb-3">
            <label for="recipient-name" class="col-form-label">Min Purchase Amount:</label>
            <input type="number" class="form-control" id="recipient-name" name="maxAmount"
            value="<%=couponData.MinAmount%>" required>
          </div>
          <div class="mb-3">
            <label for="recipient-name" class="col-form-label">Discount Amount:</label>
            <input type="number" class="form-control" id="recipient-name" name="discountAmount"
            value="<%=couponData.DiscountAmount%>" required>
          </div>
         
          <div class="mb-3">
            <label for="recipient-name" class="col-form-label">Discount Type:</label>
            <label class="form-check-label">
              <input type="radio" name="couponType" value="public" required> Public
            </label>
            <label class="form-check-label ml-3">
              <input type="radio" name="couponType" value="private" required> Private
            </label>
          </div>
           
          <div class="mb-3">
            <label for="recipient-name" class="col-form-label">Start Date:</label>
            <input type="date" class="form-control" id="recipient-name" name="startDate"
            value="<%=couponData.StartDate.toISOString().split('T')[0] %>" required>
          </div>
          <div class="mb-3">
            <label for="recipient-name" class="col-form-label">End Date:</label>
            <input type="date" class="form-control" id="recipient-name" name="endDate"
            value="<%=couponData.EndDate.toISOString().split('T')[0] %>" required>
          </div>

      </div>
      <div class="modal-footer">
        <a href="/admin/Coupons">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
        </a>
        <button type="button" class="btn btn-primary" onclick="submitForm('<%=couponData._id%>')">Save Coupons</button>
      </div>
    </div>
    </form>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
     function validateCouponCode() {
  const couponCodeInput = document.getElementById('couponCode');
  const couponWarning = document.getElementById('couponWarning');

  const couponCode = couponCodeInput.value.trim();

  if (!couponCode) {
    couponWarning.textContent = 'Coupon code is required.';
    couponWarning.classList.remove('d-none');
    return false
  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[#])[A-Za-z\d#]+$/.test(couponCode)) {
    couponWarning.textContent = 'Invalid coupon code. Must contain at least one uppercase letter, one lowercase letter, one number, and #.';
    couponWarning.classList.remove('d-none');
    return false
  } else {
    couponWarning.classList.add('d-none');
    console.log("code is valid");
    return true
  }
}

console.log("<<<<<<<<<<<<<<<");
    function submitForm(couponId) {
      if(validateCouponCode()){
      const form = document.getElementById('couponForm');
      const formData = new FormData(form);
      console.log("/////////", formData);
      
      formData.append('couponId', couponId);

      const minAmount = parseFloat(formData.get('maxAmount'));
    const discountAmount = parseFloat(formData.get('discountAmount'));
    const startDate = new Date(formData.get('startDate'));
    const endDate = new Date(formData.get('endDate'));
    console.log("//////////////////");
    if (minAmount <= discountAmount) {
    console.log(">>>>>>>>>>>>>>");
      showAlert('Minimum amount must be greater than the discount amount.', 'error');
      return;
    }
    if (startDate >= endDate) {
    console.log("<<<<<<<<<<<<<<");
      showAlert('Start date must be before the end date.', 'error');
      return;
    }
      const jsonObject = {};
      formData.forEach((value, key) => {
        jsonObject[key] = value;
      });
      const jsonData = JSON.stringify(jsonObject);
      console.log("------------------", jsonData);
      fetch('/admin/EditCoupon', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: jsonData,
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
         
            console.log("Coupon created........");
            Swal.fire({
                        
                        icon: 'success',
        title: 'Coupon updated successfully',
        showConfirmButton: false,
        timer: 2000
                    })
                    setTimeout(()=>{
                      window.location.href = '/admin/Coupons';          
                    },2000)
          } else {
            console.log("hhhhh.........");
            alert(`Error: ${data.message}`);
          }
        })
        .catch(error => {
          console.error('Error creating coupon:', error);
          showAlert('An error occurred. Please try again.', 'error');
        });
      }
    }

    var couponType = '<%= couponData.couponType %>';

    var publicRadio = document.querySelector('input[value="public"]');
    var privateRadio = document.querySelector('input[value="private"]');

if (couponType === 'public') {
    publicRadio.checked = true;
} else if (couponType === 'private') {
    privateRadio.checked = true;
}

  </script>